import { useState } from "react";
import { useEskulStore } from "@/stores/eskulStore";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger, DialogFooter, DialogClose } from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { PlusCircle, ClipboardList } from "lucide-react";
import { format } from "date-fns";

const UploadProject = () => {
  const { kelasAktif, siswa, projects, uploadProject } = useEskulStore((state) => ({
    kelasAktif: state.kelasAktif,
    siswa: state.siswa,
    projects: state.projects,
    uploadProject: state.uploadProject,
  }));

  const [isDialogOpen, setIsDialogOpen] = useState(false);
  const [selectedSiswa, setSelectedSiswa] = useState("");
  const [namaProject, setNamaProject] = useState("");
  const [nilai, setNilai] = useState(0);

  if (!kelasAktif) return null;

  const siswaDiKelas = Object.values(siswa).filter(s => s.kelasId === kelasAktif);
  const projectsDiKelas = Object.values(projects).flat().filter(p => p.kelasId === kelasAktif);

  const handleAddProject = () => {
    if (!selectedSiswa || !namaProject || !kelasAktif) {
      alert("Siswa, Nama Project, dan Nilai harus diisi.");
      return;
    }

    uploadProject({
      id: "", // generated by store
      siswaId: selectedSiswa,
      kelasId: kelasAktif,
      namaProject,
      nilai,
      fileUrl: "", // Not implemented in this version
      tanggalUpload: format(new Date(), "yyyy-MM-dd"),
    });

    setSelectedSiswa("");
    setNamaProject("");
    setNilai(0);
    setIsDialogOpen(false);
  };

  return (
    <Card>
      <CardHeader className="flex flex-row items-center justify-between">
        <div>
          <CardTitle>Penilaian Proyek</CardTitle>
          <CardDescription>Catat dan kelola nilai proyek siswa.</CardDescription>
        </div>
        <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>
          <DialogTrigger asChild>
            <Button variant="outline" size="sm"><PlusCircle className="h-4 w-4 mr-2" />Tambah Nilai</Button>
          </DialogTrigger>
          <DialogContent>
            <DialogHeader><DialogTitle>Tambah Nilai Proyek</DialogTitle></DialogHeader>
            <div className="grid gap-4 py-4">
              <Select onValueChange={setSelectedSiswa} value={selectedSiswa}>
                  <SelectTrigger><SelectValue placeholder="Pilih Siswa..." /></SelectTrigger>
                  <SelectContent>{siswaDiKelas.map(s => <SelectItem key={s.id} value={s.id}>{s.nama}</SelectItem>)}</SelectContent>
              </Select>
              <Input placeholder="Nama Proyek" value={namaProject} onChange={e => setNamaProject(e.target.value)} />
              <Input type="number" placeholder="Nilai (0-100)" value={nilai} onChange={e => setNilai(parseInt(e.target.value, 100))} />
            </div>
            <DialogFooter>
              <DialogClose asChild><Button type="button" variant="secondary">Batal</Button></DialogClose>
              <Button type="submit" onClick={handleAddProject}>Simpan</Button>
            </DialogFooter>
          </DialogContent>
        </Dialog>
      </CardHeader>
      <CardContent>
      <div className="space-y-4">
          {projectsDiKelas.length > 0 ? (
            projectsDiKelas.map(p => {
              const student = siswa[p.siswaId];
              return (
                <div key={p.id} className="flex justify-between items-center p-3 border rounded-lg">
                  <div>
                    <p className="font-semibold">{p.namaProject} - {student?.nama || 'Siswa tidak ditemukan'}</p>
                    <p className="text-sm text-muted-foreground">Tanggal: {p.tanggalUpload}</p>
                  </div>
                  <div className="text-lg font-bold">{p.nilai}</div>
                </div>
              )
            })
          ) : (
            <div className="text-center text-muted-foreground py-8">
              <ClipboardList className="mx-auto h-12 w-12" />
              <p className="mt-4">Belum ada nilai proyek yang diinput.</p>
            </div>
          )}
        </div>
      </CardContent>
    </Card>
  );
};

export default UploadProject;
