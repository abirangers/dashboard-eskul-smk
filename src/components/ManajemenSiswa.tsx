import { useState } from "react";
import { useEskulStore } from "@/stores/eskulStore";
import { KELOMPOK_KELAS } from "@/config/kelas";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
  DialogFooter,
  DialogClose,
} from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { PlusCircle } from "lucide-react";

const ManajemenSiswa = () => {
  const { kelasAktif, siswa, tambahSiswa } = useEskulStore((state) => ({
    kelasAktif: state.kelasAktif,
    siswa: state.siswa,
    tambahSiswa: state.tambahSiswa,
  }));

  const [isDialogOpen, setIsDialogOpen] = useState(false);
  const [namaSiswa, setNamaSiswa] = useState("");
  const [nomorInduk, setNomorInduk] = useState("");

  if (!kelasAktif) {
    return null; // Don't render if no class is selected
  }

  const siswaDiKelas = Object.values(siswa).filter(
    (s) => s.kelasId === kelasAktif
  );

  const handleAddSiswa = () => {
    if (!namaSiswa || !nomorInduk || !kelasAktif) {
      alert("Nama dan Nomor Induk harus diisi.");
      return;
    }
    const jurusan = KELOMPOK_KELAS[kelasAktif].nama.split(" ")[1]; // e.g., "RPL" from "Kelas X RPL 1"

    tambahSiswa({
      id: "", // ID will be generated by the store
      nama: namaSiswa,
      nomorInduk: nomorInduk,
      kelasId: kelasAktif,
      jurusan: jurusan,
      aktif: true,
    });

    // Reset form and close dialog
    setNamaSiswa("");
    setNomorInduk("");
    setIsDialogOpen(false);
  };

  return (
    <Card>
      <CardHeader className="flex flex-row items-center justify-between">
        <div>
          <CardTitle>Manajemen Siswa</CardTitle>
          <CardDescription>
            Tambah, lihat, dan kelola siswa di kelas {KELOMPOK_KELAS[kelasAktif].nama}.
          </CardDescription>
        </div>
        <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>
          <DialogTrigger asChild>
            <Button size="sm">
              <PlusCircle className="h-4 w-4 mr-2" />
              Tambah Siswa
            </Button>
          </DialogTrigger>
          <DialogContent className="sm:max-w-[425px]">
            <DialogHeader>
              <DialogTitle>Tambah Siswa Baru</DialogTitle>
              <DialogDescription>
                Masukkan data siswa untuk kelas {KELOMPOK_KELAS[kelasAktif].nama}.
              </DialogDescription>
            </DialogHeader>
            <div className="grid gap-4 py-4">
              <div className="grid grid-cols-4 items-center gap-4">
                <Label htmlFor="nama" className="text-right">
                  Nama
                </Label>
                <Input
                  id="nama"
                  value={namaSiswa}
                  onChange={(e) => setNamaSiswa(e.target.value)}
                  className="col-span-3"
                  placeholder="Contoh: Budi"
                />
              </div>
              <div className="grid grid-cols-4 items-center gap-4">
                <Label htmlFor="nis" className="text-right">
                  Nomor Induk
                </Label>
                <Input
                  id="nis"
                  value={nomorInduk}
                  onChange={(e) => setNomorInduk(e.target.value)}
                  className="col-span-3"
                  placeholder="Contoh: 2024001"
                />
              </div>
            </div>
            <DialogFooter>
              <DialogClose asChild>
                <Button type="button" variant="secondary">Batal</Button>
              </DialogClose>
              <Button type="submit" onClick={handleAddSiswa}>Simpan</Button>
            </DialogFooter>
          </DialogContent>
        </Dialog>
      </CardHeader>
      <CardContent>
        <Table>
          <TableHeader>
            <TableRow>
              <TableHead>Nama</TableHead>
              <TableHead>Nomor Induk</TableHead>
              <TableHead>Status</TableHead>
            </TableRow>
          </TableHeader>
          <TableBody>
            {siswaDiKelas.length > 0 ? (
              siswaDiKelas.map((s) => (
                <TableRow key={s.id}>
                  <TableCell className="font-medium">{s.nama}</TableCell>
                  <TableCell>{s.nomorInduk}</TableCell>
                  <TableCell>{s.aktif ? "Aktif" : "Nonaktif"}</TableCell>
                </TableRow>
              ))
            ) : (
              <TableRow>
                <TableCell colSpan={3} className="text-center h-24">
                  Belum ada siswa di kelas ini.
                </TableCell>
              </TableRow>
            )}
          </TableBody>
        </Table>
      </CardContent>
    </Card>
  );
};

export default ManajemenSiswa;
